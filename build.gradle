plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
	id 'idea'
	id "net.darkhax.curseforgegradle" version "1.0.7"
	id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven { url = 'https://maven.cafeteria.dev'
		content {
			includeGroup 'net.adriantodt.fabricmc'
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://cursemaven.com"
			}
		}
		filter {
			includeGroup "curse.maven"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.saps.dev/releases"
			}
		}
		filter {
			includeGroup"dev.latvian.mods"
			includeGroup"dev.ftb.mods"
		}
	}
	maven { url = "https://maven.nucleoid.xyz/" }
	maven { url = 'https://maven.blamejared.com' }
	maven { url = "https://maven.willbl.dev/releases" }
	maven { url = "https://maven.parchmentmc.org" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = 'https://maven.ladysnake.org/releases' }
	maven { url = 'https://maven.ladysnake.org/snapshots' }
	maven { url = "https://maven.shedaniel.me" }
	maven { url = "https://maven.bai.lol" }
	maven { url = 'https://maven.kosmx.dev/' }
	maven { url = "https://nexus.resourcefulbees.com/repository/maven-public/" }
	maven { url = "https://jm.gserv.me/repository/maven-public/" }
	maven { url = "https://masa.dy.fi/maven" }
	maven { url = "https://maven.quiltmc.org/repository/release" }
}

loom {
	mixin.defaultRefmapName = "medievalorigins.refmap.json"
	mods {
		"medievalorigins" {
			sourceSet sourceSets.main
		}
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Origins
	modImplementation("io.github.apace100:apoli:${apoli_fabric_version}")
	modImplementation "io.github.apace100:origins-fabric:${origins_fabric_version}"

	// Mixin
	implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}"))
	implementation(annotationProcessor("net.fabricmc:sponge-mixin:0.13.3+mixin.0.8.5"))

	// Additional Entity Attributes
	modImplementation include("maven.modrinth:AdditionalEntityAttributes:${aea_version}-fabric")

	// Spell Engine + Related
	modImplementation("maven.modrinth:spell-power:${project.spell_power_version}-fabric")
	modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}-fabric")
	modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim_version}")
	modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")
	implementation("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}")

	// Icarus
	modImplementation("maven.modrinth:icarus:${project.icarus_version}")
	modImplementation ("dev.emi:trinkets:${project.trinkets_version}")
	modLocalRuntime("com.teamresourceful.resourcefulconfig:resourcefulconfig-fabric-1.21:${project.resourceful_version}")
	modLocalRuntime ("mysticdrew:common-networking-fabric:${project.cmnw_version}")

	// FTB
	modImplementation("dev.ftb.mods:ftb-library-fabric:${project.ftb_library_version}")
	modImplementation("dev.ftb.mods:ftb-teams-fabric:${project.ftb_teams_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "medieval-origins-revival"
	versionNumber = "${version}"
	versionType = "alpha"
	versionName = "Fabric-${rootProject.version}+${minecraft_version}"
	uploadFile = remapJar
	gameVersions = ["1.21.1"]
	loaders = ["fabric"]
	changelog = new File("$project.rootDir/CHANGELOG.md").getText('UTF-8')
	//debugMode = true
	dependencies {
		required.project("origins")
		required.project("spell-engine")
	}
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
	apiToken = System.getenv("CF_TOKEN")
	group = "publishing"
	def mainFile = upload(897171, remapJar)
	mainFile.changelog = new File("$project.rootDir/CHANGELOG.md").getText('UTF-8')
	mainFile.changelogType = "markdown"
	mainFile.releaseType = "alpha"
	mainFile.addGameVersion("1.21.1")
	mainFile.addModLoader("fabric")
	mainFile.displayName = "Fabric-${rootProject.version}+${minecraft_version}"
	mainFile.addRequirement("origins")
	mainFile.addRequirement("spell-engine")
}