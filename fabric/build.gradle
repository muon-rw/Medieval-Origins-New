import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id 'idea'
    id "net.darkhax.curseforgegradle" version "1.0.7"
    id "com.modrinth.minotaur" version "2.+"
}

archivesBaseName = "${mod_name}"
version = "${rootProject.version}+${minecraft_version}-fabric"


loom {
    mixin.defaultRefmapName = "medievalorigins.refmap.json"

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}
repositories {
    maven { url = 'https://repo.greenhouse.house/releases' }
    maven {
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
    maven { url = 'https://maven.parchmentmc.org' }
    maven { url = "https://maven.nucleoid.xyz/" }
    maven { url = 'https://maven.blamejared.com' }
    maven { url = "https://maven.willbl.dev/releases" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://maven.parchmentmc.org" }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = 'https://maven.merchantpug.net/releases/' }
    maven { url = 'https://maven.ladysnake.org/releases' }
    maven {
        url = 'https://maven.cafeteria.dev'
        content {
            includeGroup 'net.adriantodt.fabricmc'
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven { url "https://maven.shedaniel.me" }
    maven { url "https://maven.bai.lol" }
    maven { url 'https://maven.kosmx.dev/' }
    maven { url 'https://maven.azuredoom.com/mods' }
    maven { url "https://maven.willbl.dev/releases" }
    exclusiveContent {
        forRepository {
            maven {
                url = "https://cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }
    maven { url = "https://nexus.resourcefulbees.com/repository/maven-public/" }
    maven { url = "https://jm.gserv.me/repository/maven-public/" }

    mavenCentral()
    mavenLocal()
}

dependencies {
    //Minecraft
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
    }
    //Fabric
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    modImplementation("com.github.apace100:calio:${calio_fabric_version}")
    modImplementation("com.github.apace100:apoli:${apoli_fabric_version}")
    modImplementation "com.github.apace100:origins-fabric:${origins_fabric_version}"
    include(modImplementation("net.merchantpug:Apugli:${apugli_version}+${minecraft_version}-fabric"))
    implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}"))
    implementation(annotationProcessor("net.fabricmc:sponge-mixin:0.13.3+mixin.0.8.5"))

    implementation project(path: ":common", configuration: "namedElements")
    modImplementation "com.terraformersmc:modmenu:${modmenu_version}"
    modImplementation include("com.github.apace100:autotag-api:${autotag_version}")
    modImplementation include("maven.modrinth:projectile-damage-attribute:${project.projectile_damage}-fabric")
    modImplementation include("com.jamieswhiteshirt:reach-entity-attributes:${project.rea_version}")

    modApi("com.github.Virtuoel:Pehkui:${pehkui_version}", {
        exclude group: "net.fabricmc.fabric-api"
    })
    modApi("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    // Icarus + Deps
    modImplementation ("dev.emi:trinkets:${project.trinkets_version}")
    modImplementation("maven.modrinth:icarus:${project.icarus_version}+Fabric")
    modLocalRuntime("com.teamresourceful.resourcefulconfig:resourcefulconfig-fabric-1.20.1:${project.resourceful_version}")
    modLocalRuntime ("mysticdrew:common-networking-fabric:${project.cmnw_version}")

    // RPG Series
    modLocalRuntime("maven.modrinth:ranged-weapon-api:${project.ranged_weapon_api_version}")
    modImplementation("maven.modrinth:spell-power:${project.spell_power_version}-fabric")
    modImplementation("maven.modrinth:spell-engine:${project.spell_engine_version}-fabric")
    modLocalRuntime("maven.modrinth:runes:${project.runes_version}-fabric")
    modImplementation("maven.modrinth:better-combat:${project.bettercombat_version}-fabric")
    modLocalRuntime("maven.modrinth:structure-pool-api:${project.structure_pool_api_version}-fabric")

    modLocalRuntime("maven.modrinth:wizards:${project.wizards_version}-fabric")
    modLocalRuntime("maven.modrinth:paladins-and-priests:${project.paladins_version}-fabric")
    modLocalRuntime("maven.modrinth:archers:${project.archers_version}-fabric")
    modLocalRuntime("maven.modrinth:jewelry:${project.jewelry_version}-fabric")
    modLocalRuntime("maven.modrinth:rpgdifficulty:${project.rpg_version}")

    modImplementation "curse.maven:rpgmana-1021902:5447010"

    modLocalRuntime("dev.kosmx.player-anim:player-animation-lib-fabric:${project.player_anim_version}")
    implementation("com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}")
    modLocalRuntime("mod.azure.azurelibarmor:azurelibarmor-fabric-${project.minecraft_version}:${project.azure_lib_version}")
    modCompileOnly ("me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}")
    modRuntimeOnly ("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}")
    modRuntimeOnly ("curse.maven:jade-324717:${project.jade_id}")

    modImplementation "io.github.ladysnake:PlayerAbilityLib:${pal_version}"

    modImplementation "curse.maven:ftb-teams-fabric-438497:5267188"
    modImplementation "curse.maven:ftb-library-fabric-438495:6016762"
    runtimeOnly "curse.maven:architectury-api-419699:5137936"
}

processResources {
    from project(":common").sourceSets.main.resources
    exclude "medievalorigins.common.accesswidener"

    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

processTestResources {
    outputs.upToDateWhen { false }
    from project(":common").sourceSets.test.resources
}

tasks.withType(JavaCompile) {
    source(project(":common").sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            name = "greenhouse"
            url = "https://maven.greenhouseteam.dev/releases"
            credentials {
                username System.getenv('MAVEN_USERNAME')
                password System.getenv('MAVEN_PASSWORD')
            }
            authentication {
                create("basic", BasicAuthentication)
            }
        }
        mavenLocal()
    }
}


modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "medieval-origins-revival"
    versionNumber = "${version}"
    versionType = "release"
    versionName = "Fabric-${rootProject.version}+${minecraft_version}"
    uploadFile = remapJar
    gameVersions = ["1.20.1"]
    loaders = ["fabric"]
    changelog = new File("$project.rootDir/CHANGELOG.md").getText('UTF-8')
    //debugMode = true
    dependencies {
        required.project("origins")
        required.project("pehkui")
        required.project("spell-engine")
    }
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    apiToken = System.getenv("CF_TOKEN")
    //debugMode = true
    def mainFile = upload(897171, remapJar)
    mainFile.changelog = new File("$project.rootDir/CHANGELOG.md").getText('UTF-8')
    mainFile.changelogType = "markdown"
    mainFile.releaseType = "release"
    mainFile.addGameVersion("1.20.1")
    mainFile.addModLoader("fabric")
    mainFile.displayName = "Fabric-${rootProject.version}+${minecraft_version}"
    mainFile.addRequirement("origins")
    mainFile.addRequirement("pehkui")
    mainFile.addRequirement("spell-engine")
}